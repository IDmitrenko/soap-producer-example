buildscript {
	ext {
		springBootVersion = '2.1.6.RELEASE'
	}

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets.main.java.srcDirs "src/main/generated-sources"
sourceSets.main.resources.excludes = ['payment.xsd']

configurations {
    jaxb
}

dependencies {

	implementation "org.jvnet.mimepull:mimepull:1.9.11"
	implementation "org.springframework.boot:spring-boot-starter-web-services:${springBootVersion}"
	implementation "wsdl4j:wsdl4j:1.6.3"

    jaxb (
		'com.sun.xml.bind:jaxb-xjc:2.2.7',
		'com.sun.xml.bind:jaxb-impl:2.2.7'
    )

}

task jaxb {
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("src/main/generated-sources")

    doLast {
        jaxbTargetDir.mkdirs()

        ant.taskdef(
			name: 'xjc',
			classname: 'com.sun.tools.xjc.XJCTask',
			classpath: configurations.jaxb.asPath
        )

        ant.jaxbTargetDir = jaxbTargetDir

        ant.xjc(
			destdir: '${jaxbTargetDir}',
			package: 'ru.geekbrains.soap.payment',
			schema: 'src/main/resources/xsd/payment.xsd'
        )
    }
}

compileJava.dependsOn jaxb